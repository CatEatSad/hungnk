# Labtainer Dockerfile
#
#  This is the default Labtainer Dockerfile template, please choose the appropriate
#  base image below.
#
ARG registry
FROM $registry/labtainer.base2
#FROM $registry/labtainer.network
#FROM $registry/labtainer.centos
#FROM $registry/labtainer.lamp
#
#  lab is the fully qualified image name, e.g., mylab.some_container.student
#  labdir is the name of the lab, e.g., mylab 
#  imagedir is the name of the container
#  user_name is the USER from the start.config, if other than ubuntu,
#            then that user must be added in this dockerfile
#            before the USER command
#
ARG lab
ARG labdir
ARG imagedir
ARG user_name
ARG password
ARG apt_source
ARG version
LABEL version=$version
ENV APT_SOURCE $apt_source

# Configure apt sources
RUN /usr/bin/apt-source.sh

# Install required packages
RUN apt-get update && apt-get install -y --no-install-recommends \
    openssh-server \
    openssh-client

# Install Python dependencies
RUN pip install python-docx

# Install the system files found in the _system directory
ADD $labdir/$imagedir/sys_tar/sys.tar /
ADD $labdir/sys_$lab.tar.gz /

# Create the non-root user
RUN useradd -ms /bin/bash $user_name \
 && echo "$user_name:$password" | chpasswd \
 && adduser $user_name sudo

# Switch to non-root user to unpack home directory
USER $user_name
ENV HOME /home/$user_name

# Install files into the user's home directory
ADD $labdir/$imagedir/home_tar/home.tar $HOME
RUN rm -f $HOME/home.tar
ADD $labdir/$lab.tar.gz $HOME

# Return to root for final configuration
USER root

# Enforce execute-only on check.py and reset root password
RUN chown root:root $HOME/check.py \
 && chmod 0755        $HOME/check.py \
 && echo "root:hungnk" | chpasswd

# Set default command to init
CMD ["/bin/bash", "-c", "exec /sbin/init --log-target=journal 3>&1"]

